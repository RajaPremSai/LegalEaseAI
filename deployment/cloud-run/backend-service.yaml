apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: legal-ai-backend
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      annotations:
        # Auto-scaling configuration
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "100"
        
        # Resource allocation
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/cpu: "2"
        
        # Networking
        run.googleapis.com/vpc-access-connector: legal-ai-connector
        run.googleapis.com/vpc-access-egress: private-ranges-only
        
        # Security
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/sandbox: gvisor
        
        # Startup and health checks
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: legal-ai-backend-sa
      containers:
      - image: gcr.io/PROJECT_ID/legal-ai-backend:latest
        ports:
        - name: http1
          containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-url
              key: url
        - name: GOOGLE_CLOUD_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: google-cloud-config
              key: project-id
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/secrets/service-account/key.json"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-config
              key: url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-config
              key: secret
        resources:
          limits:
            memory: "2Gi"
            cpu: "2000m"
          requests:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: service-account
          mountPath: /secrets/service-account
          readOnly: true
      volumes:
      - name: service-account
        secret:
          secretName: google-service-account